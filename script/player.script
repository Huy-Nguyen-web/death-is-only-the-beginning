local platypus = require "platypus.platypus"
local jump_buff_time = 0.5
local coyote_time = 0.5
local jump_buff = false
local coyote = false
local on_ground = false

function init(self)
	msg.post(".", "acquire_input_focus")
	self.platypus = platypus.create({
		collisions = {
			groups = {
				[hash("floor")] = platypus.DIR_ALL
			},
			left = 8,
			right = 8,
			top = 8,
			bottom = 8,
		},
		debug = true,
		reparent = false,
		gravity = -500
	})
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	self.platypus.update(dt)
	-- Add jump buffering
	if jump_buff then
		print(jump_buff_time)
		jump_buff_time = jump_buff_time - dt
	end
	if  then
		print("on ground")
		if jump_buff_time > 0 then
			self.platypus.jump(250)
			-- reset the timer
			jump_buff = false
			jump_buff_time = 0.5
		else
			-- reset the timer
			jump_buff = false
			jump_buff_time = 0.5
		end
	end
end

function on_message(self, message_id, message, sender)
	self.platypus.on_message(message_id, message)
end

function on_input(self, action_id, action)
	if action_id == hash("left") then
		self.platypus.left(100)
	elseif action_id == hash("right") then
		self.platypus.right(100)
	end
	if action_id == hash("jump") then
		if action.pressed then
			-- self.platypus.jump(250)
			jump_buff = true
		-- elseif action.released then
		-- 	self.platypus.abort_jump(0.5)
		end
	end
end
